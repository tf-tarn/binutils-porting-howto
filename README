--------------------------------------------------------------------------------

                        About this Repository

This is an attempt to create a minimal working starting point to
porting a modern version (as of this writing) of binutils to a new
target architecture, with the steps spelled out in smallish,
meaningful commits.

The architecture being added is named hd6305, which is a real
processor to which I plan to port binutils, but I do not intend this
repository to contain any code actually specific to this processor,
making this really only a template and the name something to be
replaced in a real implementation.

In the past I found the guide linked below to be helpful, but it is
old and the patches don't seem to work with new binutils versions
as-is. Furthermore, it doesn't really mention using autotools
explicitly, so as a novice user of such things I felt I was on rather
shaky ground doing things like patching both configure.ac and
configure in the same directory. It seemed like redundant work, which
it turns out, is.

https://atgreen.github.io/ggx/

The current version (if I have kept this file up to date) is the first
minimal, sort-of working step towards adding support for a new
architecture.

With these modifications, many parts of binutils compile. To check
which, I used the following command in the build directory.

> for dir in $(find -mindepth 2 -maxdepth 2 -type f -name "Makefile" -exec dirname {} \;); do (echo -n $dir; cd $dir; make >/dev/null 2>&1 && echo " ok" || echo " fail"); done

It gives this output:
./libiberty ok
./zlib ok
./libsframe ok
./intl ok
./libbacktrace ok
./libdecnumber ok
./etc ok
./readline ok
./gnulib ok
./binutils fail
./gas fail
./gprof fail
./bfd ok
./opcodes ok
./gdbsupport ok
./sim ok
./libctf ok
./gdb fail

The failures are due to as-yet undefined symbols. The next step is to
define some of those.


See also
http://sourceware.org/binutils/binutils-porting-guide.txt
and various search engine results about porting binutils...


The original binutils README follows.
--------------------------------------------------------------------------------


		   README for GNU development tools

This directory contains various GNU compilers, assemblers, linkers, 
debuggers, etc., plus their support routines, definitions, and documentation.

If you are receiving this as part of a GDB release, see the file gdb/README.
If with a binutils release, see binutils/README;  if with a libg++ release,
see libg++/README, etc.  That'll give you info about this
package -- supported targets, how to use it, how to report bugs, etc.

It is now possible to automatically configure and build a variety of
tools with one command.  To build all of the tools contained herein,
run the ``configure'' script here, e.g.:

	./configure 
	make

To install them (by default in /usr/local/bin, /usr/local/lib, etc),
then do:
	make install

(If the configure script can't determine your type of computer, give it
the name as an argument, for instance ``./configure sun4''.  You can
use the script ``config.sub'' to test whether a name is recognized; if
it is, config.sub translates it to a triplet specifying CPU, vendor,
and OS.)

If you have more than one compiler on your system, it is often best to
explicitly set CC in the environment before running configure, and to
also set CC when running make.  For example (assuming sh/bash/ksh):

	CC=gcc ./configure
	make

A similar example using csh:

	setenv CC gcc
	./configure
	make

Much of the code and documentation enclosed is copyright by
the Free Software Foundation, Inc.  See the file COPYING or
COPYING.LIB in the various directories, for a description of the
GNU General Public License terms under which you can copy the files.

REPORTING BUGS: Again, see gdb/README, binutils/README, etc., for info
on where and how to report problems.
